<#@ template debug="true" hostspecific="true" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ output extension=".txt"

#>
This text template is used at design-time to generate the matrix of item
templates that get installed as part of the Entity Framework Tools.
<#

    var versions = new[] { "5", "6" };
    var types = new[]
        {
            new TemplateType
                {
                    TemplateDir = @"CSharp\Data",
                    Qualifier1 = "CS",
                    Qualifier2 = "CS",
                },
            new TemplateType
                {
                    TemplateDir = @"VisualBasic\Data",
                    Qualifier1 = "VB",
                    Qualifier2 = "VB",
                },
            new TemplateType
                {
                    TemplateDir = @"Web\CSharp",
                    Qualifier1 = "CSWS",
                    Qualifier2 = "CS_WS",
                },
            new TemplateType
                {
                    TemplateDir = @"Web\VisualBasic",
                    Qualifier1 = "VBWS",
                    Qualifier2 = "VB_WS",
                }
        };
    var cultures = new[]
        {
            new TemplateCulture
                {
                    LCID = 1028,
                    TemplateName = "EF {0}.x DbContext 產生器",
                    TemplateDescription = "產生強型別 DbContext 類別和永續性無知實體類別的專案項目。搭配 EF {0}.x 版本使用時，請使用這個範本。",
                    SatellitePackageCulture = "zh-Hant"
                },
            new TemplateCulture
                {
                    LCID = 1031,
                    TemplateName = "EF {0}.x-DbContext-Generator",
                    TemplateDescription = "Ein Projektelement zum Generieren einer stark typisierten DbContext-Klasse und persistenzneutraler Entitätsklassen. Nutzen Sie diese Vorlage bei Verwendung einer EF {0}.x-Version.",
                    SatellitePackageCulture = "de"
                },
            new TemplateCulture
                {
                    LCID = 1033
                },
            new TemplateCulture
                {
                    LCID = 1034,
                    TemplateName = "Generador de DbContext EF {0}.x",
                    TemplateDescription = "Un elemento de proyecto para generar una clase DbContext fuertemente tipada y clases de entidad que ignoran la persistencia. Utilice esta plantilla cuando trabaje con una versión EF {0}.x.",
                    SatellitePackageCulture = "es"
                },
            new TemplateCulture
                {
                    LCID = 1036,
                    TemplateName = "Générateur de DbContext EF {0}.x",
                    TemplateDescription = "Un élément de projet pour générer una classe DbContext fortement typé et classes d'entité ignorant la persistance. Utilisez ce modèle lors de l'utilisation avec une version EF {0}.x.",
                    SatellitePackageCulture = "fr"
                },
            new TemplateCulture
                {
                    LCID = 1040,
                    TemplateName = "Generatore di EF {0}.x DbContext",
                    TemplateDescription = "Elemento di progetto per la generazione di una classe DbContext fortemente tipizzata e di classi di entità non in grado di riconoscere la persistenza. Utilizzare questo modello con la versione EF {0}.x.",
                    SatellitePackageCulture = "it"
                },
            new TemplateCulture
                {
                    LCID = 1041,
                    TemplateName = "EF {0}.x DbContext ジェネレーター",
                    TemplateDescription = "厳密に型指定された DbContext クラスおよび永続性の無視エンティティ クラスを生成するためのプロジェクト項目です。EF {0}.x リリースを利用する場合にこのテンプレートを使用します。",
                    SatellitePackageCulture = "ja"
                },
            new TemplateCulture
                {
                    LCID = 1042,
                    TemplateName = "EF {0}.x DbContext 생성기",
                    TemplateDescription = "강력한 형식의 DbContext 클래스와 지속성 무시 엔터티 클래스를 생성하는 프로젝트 항목입니다. EF {0}.x 릴리스에서 작업하는 경우 이 템플릿을 사용하십시오.",
                    SatellitePackageCulture = "ko"
                },
            new TemplateCulture
                {
                    LCID = 1049,
                    TemplateName = "Генератор EF {0}.x DbContext",
                    TemplateDescription = "Злемент проекта для создания строго типизированного класса DbContext и игнорирующих сохраняемость классов сущностей. Используйте этот шаблон при работе с выпуском EF {0}.x.",
                    SatellitePackageCulture = "ru"
                },
            new TemplateCulture
                {
                    LCID = 2052,
                    TemplateName = "EF {0}.x DbContext 生成器",
                    TemplateDescription = "生成强类型 DbContext 类和缺少持续性的实体类的项目项。在使用 EF {0}.x 版本时使用此模板。",
                    SatellitePackageCulture = "zh-Hans"
                }
        };

    var sourceDir = Host.ResolvePath("DbContext");

    foreach (var version in versions)
    {
        foreach (var type in types)
        {
            var vstemplateFilename = string.Format("DbContext_{0}_V{1}.0.vstemplate", type.Qualifier2, version);
            var vstemplatePath = Path.Combine(sourceDir, "EF" + version, vstemplateFilename);

            foreach (var culture in cultures)
            {
                var targetDir = Path.Combine(
                    Host.ResolvePath("DbContext"),
                    string.Format(@"{0}\{1}\DbCtx{2}EF{3}", type.TemplateDir, culture.LCID, type.Qualifier1, version));

                Directory.CreateDirectory(targetDir);
                TransformTo(vstemplatePath, targetDir, culture, version);
            }
        }
    }
#>
<#+
    private void CopyTo(string sourceFileName, string destDirPath)
    {
        File.Copy(sourceFileName, Path.Combine(destDirPath, Path.GetFileName(sourceFileName)), true);
    }

    private void TransformTo(string sourceFileName, string destDirPath, TemplateCulture culture, string version)
    {
        var document = XDocument.Load(sourceFileName, LoadOptions.PreserveWhitespace);
        var ns = document.Root.GetDefaultNamespace();
        var templateData = document.Root.Element(ns + "TemplateData");
        var packages = document.Root.Element(ns + "WizardData").Element(ns + "packages");

        if (culture.TemplateName != null)
        {
            templateData.Element(ns + "Name").Value = string.Format(culture.TemplateName, version);
        }

        if (culture.TemplateDescription != null)
        {
            templateData.Element(ns + "Description").Value = string.Format(culture.TemplateDescription, version);
        }

        if (culture.SatellitePackageCulture != null)
        {
            var package = packages.Elements().Single();
            var packageName = package.Attribute("id").Value;
            var packageVersion = package.Attribute("version").Value;

            var satellitePackageName = string.Format("{0}.{1}", packageName, culture.SatellitePackageCulture);
            var satellitePackage = new XElement(
                ns + "package",
                new XAttribute("id", satellitePackageName),
                new XAttribute("version", packageVersion));

            packages.Add(new XText("  "));
            packages.Add(satellitePackage);
            packages.Add(new XText("\r\n    "));
        }

        using (var writer = XmlWriter.Create(
                Path.Combine(destDirPath, Path.GetFileName(sourceFileName)),
                new XmlWriterSettings { OmitXmlDeclaration = true }))
        {
            document.Save(writer);
        }
    }

    private class TemplateType
    {
        public string TemplateDir { get; set; }
        public string Qualifier1 { get; set; }
        public string Qualifier2 { get; set; }
    }

    private class TemplateCulture
    {
        public int LCID { get; set; }
        public string TemplateName { get; set; }
        public string TemplateDescription { get; set; }
        public string SatellitePackageCulture { get; set; }
    }
#>
